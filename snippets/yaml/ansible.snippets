# Generated by snippet-converter.nvim (https://github.com/smjonas/snippet-converter.nvim)

snippet apt apt:
	apt:
	  name: package
	  update_cache: true
	
	# deb from the internet
	apt:
	  deb: https://example.com/python-ppq_0.1-1_all.deb
	
	# upgrade all packages to the latest version
	  apt:
	    name: "*"
	    state: latest
	    update_cache: true
snippet assert assert:
	assert:
	  that:
	    - my_param <= 100
	    - my_param >= 0
	  fail_msg: fail
	  success_msg: success
snippet copy copy:
	copy:
	  src|content: /path/to/src
	  dest: /path/to/dest
	  remote_src: false
	  mode: 0660
	  owner: root
	  group: developers
snippet default default('default_value')
	'{{ $1 | default("$2") }}'
snippet dirname {{ inventory_dir | dirname }}
	inventory_dir | dirname
snippet file: file:
	file:
	  # files and directories
	  state: directory|absent|file
	  path: /some/path
	  recurse: true # only valid for directories
	
	  # symlinks
	  state: link
	  src: /actual/path
	  dest: /link/path
	
	  # force the creation of the symlinks in two cases: the source file does not
	  # exist (but will appear later); the destination exists and is a file (so, we
	  # need to unlink the "path" file and create symlink to the "src" file in place
	  # of it).
	  force: true
	
	  # general options
	  mode: 0770
	  owner: root
	  group: developers
snippet filedir: filedir:
	file:
	  state: directory
	  path: /some/path
	  recurse: true # only valid for directories
	  mode: 0770
	  owner: root
	  group: developers
snippet filesystem filesystem:
	filesystem:
	  fstype: ext4
	  dev: '{{ device }}'
	  resizefs: true # works for ext2, ext3, ext4, ext4dev, lvm, xfs, vfat
snippet git git:
	git:
	  repo: 'https://foosball.example.org/path/to/repo.git'
	  dest: /opt/foosball
	  depth: 1
	  force: false
	  version: HEAD
snippet group group:
	group:
	  name: somegroup
	  gid: 1001
	  state: present
	  system: true
snippet health_check_httpie shell: httpie
	listen: health_check_samson_travis_integrator
	changed_when: false
	shell: >
	  docker run --rm --net {{ docker_network_name }} clue/httpie
	  http http://samson-travis-integrator/health
	register: health_check_samson_travis_integrator
	retries: 3
	delay: 1
	until: health_check_samson_travis_integrator is success
snippet import_role import_role:
	import_role:
	  name: myrole
	  tasks_from: tasks.yml
	  vars_from: vars.yml
	  defaults_from: defaults.yml
	vars:
	  my_var: my_value
	tags: my_tag
snippet inventory inventory example
	all:
	  hosts:
	    mail.example.com:
	  children:
	    webservers:
	      hosts:
	        foo.example.com:
	        bar.example.com:
	    dbservers:
	      hosts:
	        one.example.com:
	        two.example.com:
	        three.example.com:
snippet inventory_dir {{ inventory_dir }}
	'{{ inventory_dir }}'
snippet lookup_file lookup('file', 'myfile.txt')
	lookup('file', 'path/to/file.txt')
snippet mount mount:
	mount:
	  path: /mnt/storage
	  src: '{{ device }}'
	  fstype: ext4
	  state: mounted|unmounted
snippet npm npm:
	npm:
	  name: typescript
	  global: true
snippet pip pip:
	pip:
	  name: package
	  state: absent|forcereinstall|latest|present
	  version: 2.6.0
	  extra_args: --user --no-cache-dir
snippet playbook playbook skeleton
	---
	- name: Playbook
	  hosts: all
	  tasks:
	    - import_role:
	        name: users
	      tags: users
snippet playbook_dir {{ playbook_dir }}
	'{{ playbook_dir }}'
snippet role_path {{ role_path }}
	'{{ role_path }}'
snippet stat stat:
	stat:
	  path: /tmp/parity.tgz
	  get_checksum: true
	  checksum_algorithm: md5
	register: stat_result
	
	# Usage
	# stat_result.stat.checksum
	
	# Usage
	# stat_result.stat.exists
snippet template template:
	template:
	  src: /path/to/src
	  dest: /path/to/dest
	  mode: 0660
	  owner: me
	  group: developers
snippet user user:
	user:
	  name: johnd
	  uid: 1040
	  groups: admin
	  # if append is false the user will only be adedd to the mentioned groups
	  # if append is true the user will additionally be added to the mentioned
	  # groups
	  append: false
	  shell: /bin/zsh
